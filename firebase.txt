
    }

  
   "rules": {
    
    "users":{			#kullanıcılar değişkeni
      "$uid":{
        ".read": "$uid" === auth.uid,			#kullanıcılar kendi uid'lerine erişebilecek
          ".write": "$uid" === auth.uid
      }
     
    }


#==========================

    }


   "rules": {
    
    "Admin":{
      ".read":"auth.uid != null",
        ".write":"false"
    },
      
    "User":{
      ".read":"root.child("Admin/"+ aut.uid.exists())"	#user kısmına sadece adminin ulaşmasını sağlar.
    }
  
    
    
  }


  #=====================

  oturum açama yöntemleri kontrol etme

  email için: password
  facebook için: facebook
  twitter için: twitter
  github için: github
  guest: anonymous


  {
  "rules": {
    
   "UsersbyGoogle":{
     ".read": auth.provider == google
   }
  
  }
}


#====================


#users: kullanıcılar kendi uid'lerine okuma ve yazma yapmalıdır.
#score:	kullanıcılar sadece kendi uid'lerine yazmalı fakat diğer scorları da okumalı.
#questions: soruları sadece okuma iznine açık olmalı.



{
  "rules": {
	
    "Users":{
      "$user_id":{			#her kullanıcı		
        ".read": auth.uid !=  null	&& $user_id === auth.uid,  #oturum açmış mı? ve user_id kullanıcın uid'si ile eşitmi.
        ".write": auth.uid != null && $user_id === auth.uid 
                
      }
      "SScores":{
        "$user_id":{
          ".read": auth.uid != null && root.child('Users/' + auth.uid).exists(),	#kullanıcı oturum açmış mı ve böyle bir user id var mı
          ".write": auth.uid != null && root.child('Users/' + auth.uid).exists(),
            "validate":"newData.child(''+ auth.uid).exists() && newData.child(''+ auth.uid).isNumber()", #gelen bilgi kullanıcıdan geliyor mu? ve gelen bilgi sayı mı?
              "indexOn":".value"
        }
        "$Level":{
          ".read": auth.uid != null && root.child('Users/' + auth.uid).exists(),
            ".write": auth.uid != null && root.child('Users/' + auth.uid).exists(),
              "validate":"newData.child(''+ auth.uid).exists() && newData.child(''+ auth.uid).isNumber()"
        }
        
        "$Questions":{
          ".read": auth.uid != null && root.child('Users/' + auth.uid).exists(),
            ".write": false
        }
      }
    }
  
  }
}



#===================
































